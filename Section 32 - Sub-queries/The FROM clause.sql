-- COMPARING THOSE TWO FUNCTIONS WITH THE EXECUTION PLAN -> CTRL + M
-- GIVES THE SAME RESULTS, THEY TAKE THE SAME TIME TO EXECUTE
-- WITH THE INNER JOINS
SELECT * 
FROM EmployeeTransaction AS T
INNER JOIN (SELECT * FROM Employee WHERE EMPLOYEELASTNAME LIKE 'Y%') AS E
ON E.EMPLOYEENUMBER = T.EMPLOYEENUMBER
ORDER BY T.EMPLOYEENUMBER

SELECT * 
FROM EmployeeTransaction AS T
INNER JOIN Employee AS E
ON E.EMPLOYEENUMBER = T.EMPLOYEENUMBER
WHERE E.EmployeeLastName LIKE 'Y%'
ORDER BY T.EMPLOYEENUMBER
------------------------------------------------------------------------------------
--WITH LEFT JOINS WE GET DIFFERENT RESULTS
-- THIS QUERY IS GOING TO JOIN THE INNER QUERY TO OUTER
-- GOING TO KEEP ALL EmployeeTransaction BECAUSE ITS A LEFT JOIN
-- WITH THE MERGED RESULTS FROM INNER QUERY
SELECT * 
FROM EmployeeTransaction AS T
LEFT JOIN (SELECT * FROM Employee WHERE EMPLOYEELASTNAME LIKE 'Y%') AS E
ON E.EMPLOYEENUMBER = T.EMPLOYEENUMBER
ORDER BY T.EMPLOYEENUMBER

-- GIVES MERGED RESULT
SELECT * 
FROM EmployeeTransaction AS T
LEFT JOIN Employee AS E
ON E.EMPLOYEENUMBER = T.EMPLOYEENUMBER
WHERE E.EmployeeLastName LIKE 'Y%'
ORDER BY T.EMPLOYEENUMBER
------------------------------------------------------------------------------------
-- GIVES THE SAME RESULT AS USING A SUBQURY 
SELECT * 
FROM EmployeeTransaction AS T
LEFT JOIN Employee AS E
ON E.EMPLOYEENUMBER = T.EMPLOYEENUMBER
AND E.EmployeeLastName LIKE 'Y%' -- USING AND IN THE JOIN SECTION / WITHOUT WHERE CLAUSE
ORDER BY T.EMPLOYEENUMBER

-- ANOTHER EXAMPLE OF USING AND WITHOUT WHERE CLAUSE 
SELECT * 
FROM EmployeeTransaction AS T
LEFT JOIN Employee AS E
ON E.EMPLOYEENUMBER = T.EMPLOYEENUMBER  AND E.EmployeeNumber = 123
ORDER BY T.EMPLOYEENUMBER