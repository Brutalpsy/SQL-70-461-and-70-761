-- EQUALS (=) WONT WORK FOR NULLS
-- YOU HAVE TO USE IS NULL KEYWORD
SELECT * FROM Employee WHERE EmployeeMiddleName IS NULL

-- USE OF ISNULL FUNCTION

DECLARE @MYOPTION AS VARCHAR(10) = NULL
--DECLARE @MYOPTION AS VARCHAR(10) = 'OPTION B'
SELECT ISNULL(@MYOPTION,'NO OPTION') AS MYOPTION


-- USE OF COALESCE FUNCTION
-- YOU CAN USE AS MANY OPTIONS AS YOU LIKE
-- YOU GET VALUE OF FIRST NOT NULL OPTION
DECLARE @MYFIRSTOPTION AS VARCHAR(10) -- 'OPTION A' 
DECLARE @MYSECONDOPTION AS VARCHAR(10) = 'OPTION B' 
SELECT COALESCE(@MYFIRSTOPTION, @MYSECONDOPTION, 'NO OPTION') AS MYOPTION


-- WONT TRY THE CONVERSION
SELECT ISNULL('ABC',1) AS MYANSWER
--CONVERSION FAILED WHEN CONVERTING THE VARCHAR VALUE 'ABC' TO DATA TYPE INT.
SELECT COALESCE('ABC',1) AS MYOTHERANSWER


SELECT ISNULL(NULL,NULL) AS MYANSWER

--AT LEAST ONE OF THE ARGUMENTS TO COALESCE MUST BE AN EXPRESSION THAT IS NOT THE NULL CONSTANT.
SELECT COALESCE(NULL, NULL) AS MYOTHERANSWER

CREATE TABLE TBLEXAMPLE
(MYOPTION NVARCHAR(10) NULL)
INSERT INTO TBLEXAMPLE (MYOPTION) VALUES('OPTION A')

-- ALLWAYS CREATES NULLABLE COLUMN INTO A NEW TABLE -> tblIsCoalesce
SELECT COALESCE(MYOPTION,'MYOPTION') AS MYOPTIONS
INTO tblIsCoalesce
FROM TBLEXAMPLE

--CAN CREATE NOT NULL COLUMN(EVALUATES ALL OF THE OPTIONS IN THE TABLE) INTO A NEW TABLE -> tblIsNull
SELECT ISNULL(MYOPTION,'NO OPTION') AS MYOPTIONS
INTO tblIsNull
from TBLEXAMPLE

-- ANOTHER,FASTER AND BETTER WAY OF COALESCE/NOT NULL
SELECT CASE WHEN MYOPTION IS NOT NULL THEN MYOPTION ELSE 'NO OPTION' END AS MYOPTION FROM TBLEXAMPLE


---------------------------
SELECT * FROM tblIsCoalesce
SELECT * FROM tblIsNull
----------------------------
DROP TABLE tblIsCoalesce
DROP TABLE tblIsNull
DROP TABLE TBLEXAMPLE